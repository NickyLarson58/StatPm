2025-05-13 01:22:30 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 01:22:30] Type: AUTH, Matricule: 100412, Location: ./documents/destination - Connexion réussie
2025-05-13 01:22:30 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 01:22:30] Type: AUTH, Matricule: 100412, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 01:22:31 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 01:22:31] Type: AUTH, Matricule: 100412, Location: ./documents/destination - SQL results - nom: LANGOIROUX, prenom: Arnaud, brigade: NUIT 1
2025-05-13 01:22:31 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 01:22:31] Type: AUTH, Matricule: 100412, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 01:22:31 [http-nio-8082-exec-1] DEBUG src.service.LoggingService - [2025-05-13 01:22:31] Type: AUTH, Matricule: 100412, Location: ./documents/destination - Récupération du pouvoir: userPm
2025-05-13 01:41:16 [http-nio-8082-exec-7] INFO  src.service.LoggingService - [2025-05-13 01:41:16] Type: AUTH, Matricule: 100631, Location: ./documents/destination - Connexion réussie
2025-05-13 01:41:16 [http-nio-8082-exec-7] INFO  src.service.LoggingService - [2025-05-13 01:41:16] Type: AUTH, Matricule: 100631, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 01:41:16 [http-nio-8082-exec-7] INFO  src.service.LoggingService - [2025-05-13 01:41:16] Type: AUTH, Matricule: 100631, Location: ./documents/destination - SQL results - nom: LAMARA, prenom: SAMIR, brigade: NUIT 1
2025-05-13 01:41:16 [http-nio-8082-exec-7] INFO  src.service.LoggingService - [2025-05-13 01:41:16] Type: AUTH, Matricule: 100631, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 01:41:16 [http-nio-8082-exec-7] DEBUG src.service.LoggingService - [2025-05-13 01:41:16] Type: AUTH, Matricule: 100631, Location: ./documents/destination - Récupération du pouvoir: userPm
2025-05-13 10:08:03 [main] INFO  src.WebApplication - Starting WebApplication using Java 11.0.26 on POM48 with PID 15492 (C:\StatPm\target\classes started by brigadenautique in C:\StatPm)
2025-05-13 10:08:03 [main] DEBUG src.WebApplication - Running with Spring Boot v2.7.0, Spring v5.3.20
2025-05-13 10:08:03 [main] INFO  src.WebApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 10:08:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-13 10:08:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 12 JPA repository interfaces.
2025-05-13 10:08:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-05-13 10:08:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 10:08:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.63]
2025-05-13 10:08:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 10:08:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2212 ms
2025-05-13 10:08:06 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-13 10:08:06 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.9.Final
2025-05-13 10:08:06 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-13 10:08:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-13 10:08:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-13 10:08:06 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-13 10:08:08 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-13 10:08:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 10:08:08 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-13 10:08:09 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-05-13 10:08:09 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-13 10:08:09 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8082 is already in use
2025-05-13 10:08:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 10:08:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-13 10:08:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-13 10:08:09 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-13 10:08:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-05-13 10:08:09 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8082 was already in use.

Action:

Identify and stop the process that's listening on port 8082 or configure this application to listen on another port.

2025-05-13 10:08:09 [main] ERROR src.WebApplication - Erreur lors du démarrage de l'application:
org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8082 is already in use
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at src.WebApplication.main(WebApplication.java:24)
Caused by: org.springframework.boot.web.server.PortInUseException: Port 8082 is already in use
	at org.springframework.boot.web.server.PortInUseException.lambda$throwIfPortBindingException$0(PortInUseException.java:70)
	at org.springframework.boot.web.server.PortInUseException.lambda$ifPortBindingException$1(PortInUseException.java:85)
	at org.springframework.boot.web.server.PortInUseException.ifCausedBy(PortInUseException.java:103)
	at org.springframework.boot.web.server.PortInUseException.ifPortBindingException(PortInUseException.java:82)
	at org.springframework.boot.web.server.PortInUseException.throwIfPortBindingException(PortInUseException.java:69)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:228)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:43)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: standardService.connector.startFailed
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:238)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:282)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:213)
	... 16 common frames omitted
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1075)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:234)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at java.base/sun.nio.ch.Net.bind0(Native Method)
	at java.base/sun.nio.ch.Net.bind(Net.java:459)
	at java.base/sun.nio.ch.Net.bind(Net.java:448)
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227)
	at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:274)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:229)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1227)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1313)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:614)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1072)
	... 20 common frames omitted
2025-05-13 10:08:26 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:08:26] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 10:08:26 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:08:26] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 10:08:26 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:08:26] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 10:08:26 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:08:26] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 10:08:26 [http-nio-8082-exec-6] DEBUG src.service.LoggingService - [2025-05-13 10:08:26] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
2025-05-13 10:11:23 [main] INFO  src.WebApplication - Starting WebApplication using Java 11.0.26 on POM48 with PID 2760 (C:\StatPm\target\classes started by brigadenautique in C:\StatPm)
2025-05-13 10:11:23 [main] DEBUG src.WebApplication - Running with Spring Boot v2.7.0, Spring v5.3.20
2025-05-13 10:11:23 [main] INFO  src.WebApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 10:11:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-13 10:11:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203 ms. Found 12 JPA repository interfaces.
2025-05-13 10:11:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-05-13 10:11:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 10:11:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.63]
2025-05-13 10:11:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 10:11:26 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3063 ms
2025-05-13 10:11:26 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-13 10:11:26 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.9.Final
2025-05-13 10:11:27 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-13 10:11:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-13 10:11:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-13 10:11:27 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-13 10:11:28 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-13 10:11:28 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 10:11:29 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-13 10:11:29 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-05-13 10:11:30 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-13 10:11:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-05-13 10:11:30 [main] INFO  src.WebApplication - Started WebApplication in 7.971 seconds (JVM running for 8.688)
2025-05-13 10:11:30 [main] INFO  src.WebApplication - Application StatPm démarrée avec succès!
2025-05-13 10:11:30 [main] DEBUG src.WebApplication - Beans chargés (400):
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalConfigurationAnnotationProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalAutowiredAnnotationProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalCommonAnnotationProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalPersistenceAnnotationProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerFactory
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - webApplication
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - utils
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - databaseConfig
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - adresseController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - agentController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - brigadeController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - cartographieController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - configController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - consulterStatController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - databaseBackupController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - equipageController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - interventionsController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - loginController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - missionsController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - natinfController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - proceduresController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - redactionController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statInterventionController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statMissionController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statisticsController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - travauxController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - typeSignalementController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - webController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - authenticationService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - brigadeService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - LLMService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - loggingService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statInterventionService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statMissionService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - interventionServiceImpl
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - missionServiceImpl
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statisticsServiceImpl
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - connexionSql
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - getDataSource
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.AutoConfigurationPackages
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.domain.EntityScanPackages
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - emBeanDefinitionRegistrarPostProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - jpaMappingContext
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - jpaContext
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.util.JpaMetamodelCacheCleanup
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - agentsRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - typeSignalementRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - photoRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statMissionRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - madRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - adressesRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - interventionsRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - signalementRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - statInterventionRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - infractionRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - missionsRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - brigadeRepository
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - propertySourcesPlaceholderConfigurer
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - websocketServletWebServerCustomizer
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactory
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - servletWebServerFactoryCustomizer
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactoryCustomizer
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinderFactory
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinder
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.BoundConfigurationProperties
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - server-org.springframework.boot.autoconfigure.web.ServerProperties
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - webServerFactoryCustomizerBeanPostProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - errorPageRegistrarBeanPostProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - dispatcherServlet
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - dispatcherServletRegistration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - taskExecutorBuilder
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - applicationTaskExecutor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - error
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - beanNameViewResolver
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - conventionErrorViewResolver
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - spring.web-org.springframework.boot.autoconfigure.web.WebProperties
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - errorAttributes
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - basicErrorController
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - errorPageCustomizer
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - preserveErrorControllerTargetClassPostProcessor
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - requestMappingHandlerAdapter
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - welcomePageHandlerMapping
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - localeResolver
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - themeResolver
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - flashMapManager
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - mvcConversionService
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - mvcValidator
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - mvcContentNegotiationManager
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - requestMappingHandlerMapping
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - mvcPatternParser
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - mvcUrlPathHelper
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - mvcPathMatcher
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - viewControllerHandlerMapping
2025-05-13 10:11:30 [main] DEBUG src.WebApplication -  - beanNameHandlerMapping
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - routerFunctionMapping
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - resourceHandlerMapping
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mvcResourceUrlProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - defaultServletHandlerMapping
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - handlerFunctionAdapter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mvcUriComponentsContributor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - httpRequestHandlerAdapter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - simpleControllerHandlerAdapter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - handlerExceptionResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mvcViewResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mvcHandlerMappingIntrospector
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - viewNameTranslator
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - defaultViewResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - viewResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - requestContextFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - formContentFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - applicationAvailability
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - beansEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - standardJacksonObjectMapperBuilderCustomizer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jacksonObjectMapperBuilder
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - parameterNamesModule
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jacksonObjectMapper
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jsonComponentModule
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jsonMixinModule
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - hikariPoolDataSourceMetadataProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptorConfigurer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - transactionManager
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jpaVendorAdapter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - entityManagerFactoryBuilder
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - entityManagerFactory
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - cachesEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - servletWebChildContextFactory
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - managementServletContext
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthStatusAggregator
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthHttpCodeStatusMapper
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthEndpointGroups
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthContributorRegistry
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthEndpointGroupsBeanPostProcessor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthEndpointWebMvcHandlerMapping
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - healthEndpointWebExtension
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - infoEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - conditionsReportEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - configurationPropertiesReportEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - endpointOperationParameterMapper
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - endpointCachingOperationInvokerAdvisor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mbeanExporter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - objectNamingStrategy
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mbeanServer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jmxAnnotationEndpointDiscoverer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - endpointObjectNameFactory
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jmxMBeanExporter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jmxIncludeExcludePropertyEndpointFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - eagerlyInitializeJmxEndpointExporter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - servletEndpointDiscoverer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - webEndpointPathMapper
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - endpointMediaTypes
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - webEndpointDiscoverer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - controllerEndpointDiscoverer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - pathMappedEndpoints
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - webExposeExcludePropertyEndpointFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - controllerExposeExcludePropertyEndpointFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - environmentEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - diskSpaceHealthIndicator
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - pingHealthContributor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - dbHealthContributor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - logFileWebEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - loggersEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - heapDumpWebEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - dumpEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - micrometerClock
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - meterRegistryPostProcessor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - propertiesMeterFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - simpleMeterRegistry
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - simpleConfig
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jvmGcMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jvmHeapPressureMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jvmMemoryMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jvmThreadMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - classLoaderMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - logbackMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - metricsEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - uptimeMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - processorMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - fileDescriptorMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - diskSpaceMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - repositoryTagsProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListener
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListenerBeanPostProcessor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - hikariDataSourceMeterBinder
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - dataSourcePoolMetadataMeterBinder
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - startupTimeMetrics
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - scheduledBeanLazyInitializationExcludeFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - taskSchedulerBuilder
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - stringHttpMessageConverter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mappingJackson2HttpMessageConverter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - messageConverters
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - restTemplateBuilderConfigurer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - restTemplateBuilder
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - restTemplateExchangeTagsProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - metricsRestTemplateCustomizer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - metricsHttpClientUriTagFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - webMvcTagsProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - webMvcMetricsFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - metricsHttpServerUriTagFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - metricsWebMvcConfigurer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - tomcatMetricsBinder
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - scheduledTasksEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - dispatcherServletMappingDescriptionProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - servletMappingDescriptionProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - filterMappingDescriptionProvider
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - mappingsEndpoint
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - springApplicationAdminRegistrar
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.aop.config.internalAutoProxyCreator
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - lifecycleProcessor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - persistenceExceptionTranslationPostProcessor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.ProjectingArgumentResolverRegistrar
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - projectingArgumentResolverBeanPostProcessor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataWebConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - pageableResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - sortResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataJacksonConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jacksonGeoModule
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - pageableCustomizer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - sortCustomizer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - jdbcTemplate
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - namedParameterJdbcTemplate
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - dataSourceScriptDatabaseInitializer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - java8TimeDialect
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - thymeleafViewResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - defaultTemplateResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - templateEngine
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionAdvisor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - transactionAttributeSource
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - transactionInterceptor
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionalEventListenerFactory
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - transactionTemplate
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - platformTransactionManagerCustomizers
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - tomcatWebServerFactoryCustomizer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - characterEncodingFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - localeCharsetMappingsCustomizer
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - multipartConfigElement
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - multipartResolver
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - servletEndpointRegistrar
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - servletExposeExcludePropertyEndpointFilter
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - webEndpointServletHandlerMapping
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - controllerEndpointHandlerMapping
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties
2025-05-13 10:11:31 [main] DEBUG src.WebApplication -  - org.springframework.orm.jpa.SharedEntityManagerCreator#0
2025-05-13 10:11:51 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-13 10:11:51 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-13 10:11:51 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-13 10:11:54 [http-nio-8082-exec-3] INFO  src.service.LoggingService - [2025-05-13 10:11:54] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 10:11:54 [http-nio-8082-exec-3] INFO  src.service.LoggingService - [2025-05-13 10:11:54] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 10:11:54 [http-nio-8082-exec-3] INFO  src.service.LoggingService - [2025-05-13 10:11:54] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 10:11:54 [http-nio-8082-exec-3] INFO  src.service.LoggingService - [2025-05-13 10:11:54] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 10:11:54 [http-nio-8082-exec-3] DEBUG src.service.LoggingService - [2025-05-13 10:11:54] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
2025-05-13 10:52:58 [main] INFO  src.WebApplication - Starting WebApplication using Java 11.0.26 on POM48 with PID 18940 (C:\StatPm\target\classes started by brigadenautique in C:\StatPm)
2025-05-13 10:52:58 [main] DEBUG src.WebApplication - Running with Spring Boot v2.7.0, Spring v5.3.20
2025-05-13 10:52:58 [main] INFO  src.WebApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 10:53:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-13 10:53:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 12 JPA repository interfaces.
2025-05-13 10:53:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-05-13 10:53:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 10:53:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.63]
2025-05-13 10:53:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 10:53:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3606 ms
2025-05-13 10:53:03 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-13 10:53:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.9.Final
2025-05-13 10:53:04 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-13 10:53:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-13 10:53:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-13 10:53:04 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-13 10:53:06 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-13 10:53:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 10:53:07 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-13 10:53:07 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-05-13 10:53:08 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-13 10:53:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-05-13 10:53:08 [main] INFO  src.WebApplication - Started WebApplication in 10.491 seconds (JVM running for 11.465)
2025-05-13 10:53:08 [main] INFO  src.WebApplication - Application StatPm démarrée avec succès!
2025-05-13 10:53:08 [main] DEBUG src.WebApplication - Beans chargés (400):
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalConfigurationAnnotationProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalAutowiredAnnotationProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalCommonAnnotationProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalPersistenceAnnotationProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webApplication
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - utils
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - databaseConfig
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - adresseController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - agentController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - brigadeController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - cartographieController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - configController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - consulterStatController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - databaseBackupController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - equipageController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - interventionsController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - loginController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - missionsController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - natinfController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - proceduresController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - redactionController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statInterventionController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statMissionController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statisticsController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - travauxController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - typeSignalementController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - authenticationService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - brigadeService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - LLMService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - loggingService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statInterventionService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statMissionService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - interventionServiceImpl
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - missionServiceImpl
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statisticsServiceImpl
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - connexionSql
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - getDataSource
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.AutoConfigurationPackages
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.domain.EntityScanPackages
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - emBeanDefinitionRegistrarPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jpaMappingContext
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jpaContext
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.util.JpaMetamodelCacheCleanup
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - brigadeRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - infractionRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - agentsRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statMissionRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - interventionsRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - adressesRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - madRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - typeSignalementRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - photoRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - signalementRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - statInterventionRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - missionsRepository
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - propertySourcesPlaceholderConfigurer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - websocketServletWebServerCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - servletWebServerFactoryCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactoryCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinderFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.BoundConfigurationProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - server-org.springframework.boot.autoconfigure.web.ServerProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webServerFactoryCustomizerBeanPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - errorPageRegistrarBeanPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - dispatcherServlet
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - dispatcherServletRegistration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - taskExecutorBuilder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - applicationTaskExecutor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - error
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - beanNameViewResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - conventionErrorViewResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.web-org.springframework.boot.autoconfigure.web.WebProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - errorAttributes
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - basicErrorController
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - errorPageCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - preserveErrorControllerTargetClassPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - requestMappingHandlerAdapter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - welcomePageHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - localeResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - themeResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - flashMapManager
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcConversionService
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcValidator
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcContentNegotiationManager
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - requestMappingHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcPatternParser
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcUrlPathHelper
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcPathMatcher
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - viewControllerHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - beanNameHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - routerFunctionMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - resourceHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcResourceUrlProvider
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - defaultServletHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - handlerFunctionAdapter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcUriComponentsContributor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - httpRequestHandlerAdapter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - simpleControllerHandlerAdapter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - handlerExceptionResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcViewResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mvcHandlerMappingIntrospector
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - viewNameTranslator
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - defaultViewResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - viewResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - requestContextFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - formContentFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - applicationAvailability
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - beansEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - standardJacksonObjectMapperBuilderCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jacksonObjectMapperBuilder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - parameterNamesModule
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jacksonObjectMapper
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
2025-05-13 10:53:08 [http-nio-8082-exec-4] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jsonComponentModule
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jsonMixinModule
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration
2025-05-13 10:53:08 [http-nio-8082-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - hikariPoolDataSourceMetadataProvider
2025-05-13 10:53:08 [http-nio-8082-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptorConfigurer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - transactionManager
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jpaVendorAdapter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - entityManagerFactoryBuilder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - entityManagerFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - cachesEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - servletWebChildContextFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - managementServletContext
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthStatusAggregator
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthHttpCodeStatusMapper
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthEndpointGroups
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthContributorRegistry
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthEndpointGroupsBeanPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthEndpointWebMvcHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - healthEndpointWebExtension
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - infoEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - conditionsReportEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - configurationPropertiesReportEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - endpointOperationParameterMapper
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - endpointCachingOperationInvokerAdvisor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mbeanExporter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - objectNamingStrategy
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mbeanServer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jmxAnnotationEndpointDiscoverer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - endpointObjectNameFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jmxMBeanExporter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jmxIncludeExcludePropertyEndpointFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - eagerlyInitializeJmxEndpointExporter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - servletEndpointDiscoverer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webEndpointPathMapper
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - endpointMediaTypes
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webEndpointDiscoverer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - controllerEndpointDiscoverer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - pathMappedEndpoints
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webExposeExcludePropertyEndpointFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - controllerExposeExcludePropertyEndpointFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - environmentEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - diskSpaceHealthIndicator
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - pingHealthContributor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - dbHealthContributor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - logFileWebEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - loggersEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - heapDumpWebEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - dumpEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - micrometerClock
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - meterRegistryPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - propertiesMeterFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - simpleMeterRegistry
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - simpleConfig
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jvmGcMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jvmHeapPressureMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jvmMemoryMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jvmThreadMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - classLoaderMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - logbackMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - metricsEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - uptimeMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - processorMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - fileDescriptorMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - diskSpaceMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - repositoryTagsProvider
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListener
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListenerBeanPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - hikariDataSourceMeterBinder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - dataSourcePoolMetadataMeterBinder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - startupTimeMetrics
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - scheduledBeanLazyInitializationExcludeFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - taskSchedulerBuilder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - stringHttpMessageConverter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mappingJackson2HttpMessageConverter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - messageConverters
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - restTemplateBuilderConfigurer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - restTemplateBuilder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - restTemplateExchangeTagsProvider
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - metricsRestTemplateCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - metricsHttpClientUriTagFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webMvcTagsProvider
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webMvcMetricsFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - metricsHttpServerUriTagFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - metricsWebMvcConfigurer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - tomcatMetricsBinder
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - scheduledTasksEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - dispatcherServletMappingDescriptionProvider
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - servletMappingDescriptionProvider
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - filterMappingDescriptionProvider
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - mappingsEndpoint
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - springApplicationAdminRegistrar
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.aop.config.internalAutoProxyCreator
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - lifecycleProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - persistenceExceptionTranslationPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.ProjectingArgumentResolverRegistrar
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - projectingArgumentResolverBeanPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataWebConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - pageableResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - sortResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataJacksonConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jacksonGeoModule
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - pageableCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - sortCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - jdbcTemplate
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - namedParameterJdbcTemplate
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - dataSourceScriptDatabaseInitializer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - java8TimeDialect
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - thymeleafViewResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - defaultTemplateResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - templateEngine
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionAdvisor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - transactionAttributeSource
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - transactionInterceptor
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionalEventListenerFactory
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - transactionTemplate
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - platformTransactionManagerCustomizers
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - tomcatWebServerFactoryCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - characterEncodingFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - localeCharsetMappingsCustomizer
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - multipartConfigElement
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - multipartResolver
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - servletEndpointRegistrar
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - servletExposeExcludePropertyEndpointFilter
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - webEndpointServletHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - controllerEndpointHandlerMapping
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties
2025-05-13 10:53:08 [main] DEBUG src.WebApplication -  - org.springframework.orm.jpa.SharedEntityManagerCreator#0
2025-05-13 10:53:08 [http-nio-8082-exec-4] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [162] milliseconds.
2025-05-13 10:53:11 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:53:11] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 10:53:11 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:53:11] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 10:53:11 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:53:11] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 10:53:11 [http-nio-8082-exec-6] INFO  src.service.LoggingService - [2025-05-13 10:53:11] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 10:53:11 [http-nio-8082-exec-6] DEBUG src.service.LoggingService - [2025-05-13 10:53:11] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
2025-05-13 11:06:09 [main] INFO  src.WebApplication - Starting WebApplication using Java 11.0.26 on POM48 with PID 23840 (C:\StatPm\target\classes started by brigadenautique in C:\StatPm)
2025-05-13 11:06:09 [main] DEBUG src.WebApplication - Running with Spring Boot v2.7.0, Spring v5.3.20
2025-05-13 11:06:09 [main] INFO  src.WebApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 11:06:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-13 11:06:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 12 JPA repository interfaces.
2025-05-13 11:06:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-05-13 11:06:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 11:06:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.63]
2025-05-13 11:06:12 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 11:06:12 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2575 ms
2025-05-13 11:06:12 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-13 11:06:12 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.9.Final
2025-05-13 11:06:13 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-13 11:06:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-13 11:06:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-13 11:06:13 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-13 11:06:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-13 11:06:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 11:06:15 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-13 11:06:15 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-05-13 11:06:15 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-13 11:06:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-05-13 11:06:15 [main] INFO  src.WebApplication - Started WebApplication in 6.581 seconds (JVM running for 7.187)
2025-05-13 11:06:15 [main] INFO  src.WebApplication - Application StatPm démarrée avec succès!
2025-05-13 11:06:15 [main] DEBUG src.WebApplication - Beans chargés (400):
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalConfigurationAnnotationProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalAutowiredAnnotationProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalCommonAnnotationProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalPersistenceAnnotationProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webApplication
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - utils
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - databaseConfig
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - adresseController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - agentController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - brigadeController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - cartographieController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - configController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - consulterStatController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - databaseBackupController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - equipageController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - interventionsController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - loginController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - missionsController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - natinfController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - proceduresController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - redactionController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statInterventionController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statMissionController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statisticsController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - travauxController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - typeSignalementController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - authenticationService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - brigadeService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - LLMService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - loggingService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statInterventionService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statMissionService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - interventionServiceImpl
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - missionServiceImpl
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statisticsServiceImpl
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - connexionSql
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - getDataSource
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.AutoConfigurationPackages
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.domain.EntityScanPackages
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - emBeanDefinitionRegistrarPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jpaMappingContext
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jpaContext
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.util.JpaMetamodelCacheCleanup
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - photoRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - adressesRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - signalementRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - interventionsRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - brigadeRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - typeSignalementRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - madRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statMissionRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - missionsRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - agentsRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - infractionRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - statInterventionRepository
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - propertySourcesPlaceholderConfigurer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - websocketServletWebServerCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - servletWebServerFactoryCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactoryCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinderFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.BoundConfigurationProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - server-org.springframework.boot.autoconfigure.web.ServerProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webServerFactoryCustomizerBeanPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - errorPageRegistrarBeanPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - dispatcherServlet
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - dispatcherServletRegistration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - taskExecutorBuilder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - applicationTaskExecutor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - error
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - beanNameViewResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - conventionErrorViewResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.web-org.springframework.boot.autoconfigure.web.WebProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - errorAttributes
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - basicErrorController
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - errorPageCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - preserveErrorControllerTargetClassPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - requestMappingHandlerAdapter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - welcomePageHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - localeResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - themeResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - flashMapManager
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcConversionService
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcValidator
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcContentNegotiationManager
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - requestMappingHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcPatternParser
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcUrlPathHelper
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcPathMatcher
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - viewControllerHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - beanNameHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - routerFunctionMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - resourceHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcResourceUrlProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - defaultServletHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - handlerFunctionAdapter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcUriComponentsContributor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - httpRequestHandlerAdapter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - simpleControllerHandlerAdapter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - handlerExceptionResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcViewResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mvcHandlerMappingIntrospector
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - viewNameTranslator
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - defaultViewResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - viewResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - requestContextFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - formContentFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - applicationAvailability
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - beansEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - standardJacksonObjectMapperBuilderCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jacksonObjectMapperBuilder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - parameterNamesModule
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jacksonObjectMapper
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jsonComponentModule
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jsonMixinModule
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - hikariPoolDataSourceMetadataProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptorConfigurer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - transactionManager
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jpaVendorAdapter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - entityManagerFactoryBuilder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - entityManagerFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - cachesEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - servletWebChildContextFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - managementServletContext
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthStatusAggregator
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthHttpCodeStatusMapper
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthEndpointGroups
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthContributorRegistry
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthEndpointGroupsBeanPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthEndpointWebMvcHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - healthEndpointWebExtension
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - infoEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - conditionsReportEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - configurationPropertiesReportEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - endpointOperationParameterMapper
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - endpointCachingOperationInvokerAdvisor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mbeanExporter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - objectNamingStrategy
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mbeanServer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jmxAnnotationEndpointDiscoverer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - endpointObjectNameFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jmxMBeanExporter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jmxIncludeExcludePropertyEndpointFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - eagerlyInitializeJmxEndpointExporter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - servletEndpointDiscoverer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webEndpointPathMapper
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - endpointMediaTypes
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webEndpointDiscoverer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - controllerEndpointDiscoverer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - pathMappedEndpoints
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webExposeExcludePropertyEndpointFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - controllerExposeExcludePropertyEndpointFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - environmentEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - diskSpaceHealthIndicator
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - pingHealthContributor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - dbHealthContributor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - logFileWebEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - loggersEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - heapDumpWebEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - dumpEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - micrometerClock
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - meterRegistryPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - propertiesMeterFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - simpleMeterRegistry
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - simpleConfig
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jvmGcMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jvmHeapPressureMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jvmMemoryMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jvmThreadMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - classLoaderMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - logbackMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - metricsEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - uptimeMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - processorMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - fileDescriptorMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - diskSpaceMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - repositoryTagsProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListener
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListenerBeanPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - hikariDataSourceMeterBinder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - dataSourcePoolMetadataMeterBinder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - startupTimeMetrics
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - scheduledBeanLazyInitializationExcludeFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - taskSchedulerBuilder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - stringHttpMessageConverter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mappingJackson2HttpMessageConverter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - messageConverters
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - restTemplateBuilderConfigurer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - restTemplateBuilder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - restTemplateExchangeTagsProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - metricsRestTemplateCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - metricsHttpClientUriTagFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webMvcTagsProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webMvcMetricsFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - metricsHttpServerUriTagFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - metricsWebMvcConfigurer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - tomcatMetricsBinder
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - scheduledTasksEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - dispatcherServletMappingDescriptionProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - servletMappingDescriptionProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - filterMappingDescriptionProvider
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - mappingsEndpoint
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - springApplicationAdminRegistrar
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.aop.config.internalAutoProxyCreator
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - lifecycleProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - persistenceExceptionTranslationPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.ProjectingArgumentResolverRegistrar
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - projectingArgumentResolverBeanPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataWebConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - pageableResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - sortResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataJacksonConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jacksonGeoModule
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - pageableCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - sortCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - jdbcTemplate
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - namedParameterJdbcTemplate
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - dataSourceScriptDatabaseInitializer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - java8TimeDialect
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - thymeleafViewResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - defaultTemplateResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - templateEngine
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionAdvisor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - transactionAttributeSource
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - transactionInterceptor
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionalEventListenerFactory
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - transactionTemplate
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - platformTransactionManagerCustomizers
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - tomcatWebServerFactoryCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - characterEncodingFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - localeCharsetMappingsCustomizer
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - multipartConfigElement
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - multipartResolver
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - servletEndpointRegistrar
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - servletExposeExcludePropertyEndpointFilter
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - webEndpointServletHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - controllerEndpointHandlerMapping
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties
2025-05-13 11:06:15 [main] DEBUG src.WebApplication -  - org.springframework.orm.jpa.SharedEntityManagerCreator#0
2025-05-13 11:06:26 [http-nio-8082-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-13 11:06:26 [http-nio-8082-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-13 11:06:26 [http-nio-8082-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2025-05-13 11:06:26 [http-nio-8082-exec-2] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [406] milliseconds.
2025-05-13 11:06:29 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 11:06:29] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 11:06:29 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 11:06:29] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 11:06:29 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 11:06:29] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 11:06:29 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 11:06:29] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 11:06:29 [http-nio-8082-exec-1] DEBUG src.service.LoggingService - [2025-05-13 11:06:29] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
2025-05-13 11:11:27 [main] INFO  src.WebApplication - Starting WebApplication using Java 11.0.26 on POM48 with PID 16540 (C:\StatPm\target\classes started by brigadenautique in C:\StatPm)
2025-05-13 11:11:27 [main] DEBUG src.WebApplication - Running with Spring Boot v2.7.0, Spring v5.3.20
2025-05-13 11:11:27 [main] INFO  src.WebApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 11:11:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-13 11:11:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 12 JPA repository interfaces.
2025-05-13 11:11:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-05-13 11:11:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 11:11:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.63]
2025-05-13 11:11:30 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 11:11:30 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3432 ms
2025-05-13 11:11:31 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-13 11:11:31 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.9.Final
2025-05-13 11:11:32 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-13 11:11:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-13 11:11:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-13 11:11:32 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-13 11:11:34 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-13 11:11:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 11:11:35 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-13 11:11:35 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-05-13 11:11:36 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-13 11:11:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-05-13 11:11:36 [main] INFO  src.WebApplication - Started WebApplication in 9.79 seconds (JVM running for 10.561)
2025-05-13 11:11:36 [main] INFO  src.WebApplication - Application StatPm démarrée avec succès!
2025-05-13 11:11:36 [main] DEBUG src.WebApplication - Beans chargés (400):
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalConfigurationAnnotationProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalAutowiredAnnotationProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalCommonAnnotationProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalPersistenceAnnotationProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webApplication
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - utils
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - databaseConfig
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - adresseController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - agentController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - brigadeController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - cartographieController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - configController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - consulterStatController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - databaseBackupController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - equipageController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - interventionsController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - loginController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - missionsController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - natinfController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - proceduresController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - redactionController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statInterventionController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statMissionController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statisticsController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - travauxController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - typeSignalementController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - authenticationService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - brigadeService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - LLMService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - loggingService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statInterventionService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statMissionService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - interventionServiceImpl
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - missionServiceImpl
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statisticsServiceImpl
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - connexionSql
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - getDataSource
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.AutoConfigurationPackages
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.domain.EntityScanPackages
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - emBeanDefinitionRegistrarPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jpaMappingContext
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jpaContext
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.util.JpaMetamodelCacheCleanup
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - missionsRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - typeSignalementRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - brigadeRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - agentsRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - infractionRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - madRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - photoRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statInterventionRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - interventionsRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - adressesRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - signalementRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - statMissionRepository
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - propertySourcesPlaceholderConfigurer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - websocketServletWebServerCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - servletWebServerFactoryCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactoryCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinderFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.BoundConfigurationProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - server-org.springframework.boot.autoconfigure.web.ServerProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webServerFactoryCustomizerBeanPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - errorPageRegistrarBeanPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - dispatcherServlet
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - dispatcherServletRegistration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - taskExecutorBuilder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - applicationTaskExecutor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - error
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - beanNameViewResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - conventionErrorViewResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.web-org.springframework.boot.autoconfigure.web.WebProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - errorAttributes
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - basicErrorController
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - errorPageCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - preserveErrorControllerTargetClassPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - requestMappingHandlerAdapter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - welcomePageHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - localeResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - themeResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - flashMapManager
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcConversionService
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcValidator
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcContentNegotiationManager
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - requestMappingHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcPatternParser
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcUrlPathHelper
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcPathMatcher
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - viewControllerHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - beanNameHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - routerFunctionMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - resourceHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcResourceUrlProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - defaultServletHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - handlerFunctionAdapter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcUriComponentsContributor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - httpRequestHandlerAdapter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - simpleControllerHandlerAdapter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - handlerExceptionResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcViewResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mvcHandlerMappingIntrospector
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - viewNameTranslator
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - defaultViewResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - viewResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - requestContextFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - formContentFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - applicationAvailability
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - beansEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - standardJacksonObjectMapperBuilderCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jacksonObjectMapperBuilder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - parameterNamesModule
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jacksonObjectMapper
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jsonComponentModule
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jsonMixinModule
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - hikariPoolDataSourceMetadataProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptorConfigurer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - transactionManager
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jpaVendorAdapter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - entityManagerFactoryBuilder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - entityManagerFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - cachesEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - servletWebChildContextFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - managementServletContext
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthStatusAggregator
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthHttpCodeStatusMapper
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthEndpointGroups
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthContributorRegistry
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthEndpointGroupsBeanPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthEndpointWebMvcHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - healthEndpointWebExtension
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - infoEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - conditionsReportEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - configurationPropertiesReportEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - endpointOperationParameterMapper
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - endpointCachingOperationInvokerAdvisor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mbeanExporter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - objectNamingStrategy
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mbeanServer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jmxAnnotationEndpointDiscoverer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - endpointObjectNameFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jmxMBeanExporter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jmxIncludeExcludePropertyEndpointFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - eagerlyInitializeJmxEndpointExporter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - servletEndpointDiscoverer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webEndpointPathMapper
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - endpointMediaTypes
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webEndpointDiscoverer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - controllerEndpointDiscoverer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - pathMappedEndpoints
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webExposeExcludePropertyEndpointFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - controllerExposeExcludePropertyEndpointFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - environmentEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - diskSpaceHealthIndicator
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - pingHealthContributor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - dbHealthContributor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - logFileWebEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - loggersEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - heapDumpWebEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - dumpEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - micrometerClock
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - meterRegistryPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - propertiesMeterFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - simpleMeterRegistry
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - simpleConfig
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jvmGcMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jvmHeapPressureMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jvmMemoryMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jvmThreadMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - classLoaderMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - logbackMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - metricsEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - uptimeMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - processorMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - fileDescriptorMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - diskSpaceMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - repositoryTagsProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListener
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListenerBeanPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - hikariDataSourceMeterBinder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - dataSourcePoolMetadataMeterBinder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - startupTimeMetrics
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - scheduledBeanLazyInitializationExcludeFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - taskSchedulerBuilder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - stringHttpMessageConverter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mappingJackson2HttpMessageConverter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - messageConverters
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - restTemplateBuilderConfigurer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - restTemplateBuilder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - restTemplateExchangeTagsProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - metricsRestTemplateCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - metricsHttpClientUriTagFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webMvcTagsProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webMvcMetricsFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - metricsHttpServerUriTagFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - metricsWebMvcConfigurer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - tomcatMetricsBinder
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - scheduledTasksEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - dispatcherServletMappingDescriptionProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - servletMappingDescriptionProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - filterMappingDescriptionProvider
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - mappingsEndpoint
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - springApplicationAdminRegistrar
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.aop.config.internalAutoProxyCreator
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - lifecycleProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - persistenceExceptionTranslationPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.ProjectingArgumentResolverRegistrar
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - projectingArgumentResolverBeanPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataWebConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - pageableResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - sortResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataJacksonConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jacksonGeoModule
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - pageableCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - sortCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - jdbcTemplate
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - namedParameterJdbcTemplate
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - dataSourceScriptDatabaseInitializer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - java8TimeDialect
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - thymeleafViewResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - defaultTemplateResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - templateEngine
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionAdvisor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - transactionAttributeSource
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - transactionInterceptor
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionalEventListenerFactory
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - transactionTemplate
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - platformTransactionManagerCustomizers
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - tomcatWebServerFactoryCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - characterEncodingFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - localeCharsetMappingsCustomizer
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - multipartConfigElement
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - multipartResolver
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - servletEndpointRegistrar
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - servletExposeExcludePropertyEndpointFilter
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - webEndpointServletHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - controllerEndpointHandlerMapping
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties
2025-05-13 11:11:36 [main] DEBUG src.WebApplication -  - org.springframework.orm.jpa.SharedEntityManagerCreator#0
2025-05-13 11:11:37 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-13 11:11:37 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-13 11:11:37 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-13 11:12:12 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 11:12:12] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 11:12:12 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 11:12:12] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 11:12:12 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 11:12:12] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 11:12:12 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 11:12:12] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 11:12:12 [http-nio-8082-exec-5] DEBUG src.service.LoggingService - [2025-05-13 11:12:12] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
2025-05-13 11:46:14 [main] INFO  src.WebApplication - Starting WebApplication using Java 11.0.26 on POM48 with PID 19132 (C:\StatPm\target\classes started by brigadenautique in C:\StatPm)
2025-05-13 11:46:14 [main] DEBUG src.WebApplication - Running with Spring Boot v2.7.0, Spring v5.3.20
2025-05-13 11:46:14 [main] INFO  src.WebApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 11:46:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-13 11:46:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 161 ms. Found 12 JPA repository interfaces.
2025-05-13 11:46:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-05-13 11:46:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 11:46:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.63]
2025-05-13 11:46:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 11:46:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2908 ms
2025-05-13 11:46:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-13 11:46:18 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.9.Final
2025-05-13 11:46:18 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-13 11:46:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-13 11:46:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-13 11:46:19 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-13 11:46:21 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-13 11:46:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 11:46:22 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-13 11:46:22 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-05-13 11:46:23 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-13 11:46:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-05-13 11:46:23 [main] INFO  src.WebApplication - Started WebApplication in 9.911 seconds (JVM running for 10.602)
2025-05-13 11:46:23 [main] INFO  src.WebApplication - Application StatPm démarrée avec succès!
2025-05-13 11:46:23 [main] DEBUG src.WebApplication - Beans chargés (400):
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalConfigurationAnnotationProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalAutowiredAnnotationProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalCommonAnnotationProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalPersistenceAnnotationProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webApplication
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - utils
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - databaseConfig
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - adresseController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - agentController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - brigadeController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - cartographieController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - configController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - consulterStatController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - databaseBackupController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - equipageController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - interventionsController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - loginController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - missionsController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - natinfController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - proceduresController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - redactionController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statInterventionController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statMissionController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statisticsController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - travauxController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - typeSignalementController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - authenticationService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - brigadeService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - LLMService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - loggingService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statInterventionService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statMissionService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - interventionServiceImpl
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - missionServiceImpl
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statisticsServiceImpl
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - connexionSql
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - getDataSource
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.AutoConfigurationPackages
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.domain.EntityScanPackages
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - emBeanDefinitionRegistrarPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jpaMappingContext
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jpaContext
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.util.JpaMetamodelCacheCleanup
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - adressesRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - brigadeRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - madRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - infractionRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - typeSignalementRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statInterventionRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - signalementRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - missionsRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - photoRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - statMissionRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - agentsRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - interventionsRepository
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - propertySourcesPlaceholderConfigurer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - websocketServletWebServerCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - servletWebServerFactoryCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactoryCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinderFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.BoundConfigurationProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - server-org.springframework.boot.autoconfigure.web.ServerProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webServerFactoryCustomizerBeanPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - errorPageRegistrarBeanPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - dispatcherServlet
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - dispatcherServletRegistration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - taskExecutorBuilder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - applicationTaskExecutor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - error
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - beanNameViewResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - conventionErrorViewResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.web-org.springframework.boot.autoconfigure.web.WebProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - errorAttributes
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - basicErrorController
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - errorPageCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - preserveErrorControllerTargetClassPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - requestMappingHandlerAdapter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - welcomePageHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - localeResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - themeResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - flashMapManager
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcConversionService
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcValidator
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcContentNegotiationManager
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - requestMappingHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcPatternParser
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcUrlPathHelper
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcPathMatcher
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - viewControllerHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - beanNameHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - routerFunctionMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - resourceHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcResourceUrlProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - defaultServletHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - handlerFunctionAdapter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcUriComponentsContributor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - httpRequestHandlerAdapter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - simpleControllerHandlerAdapter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - handlerExceptionResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcViewResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mvcHandlerMappingIntrospector
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - viewNameTranslator
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - defaultViewResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - viewResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - requestContextFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - formContentFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - applicationAvailability
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - beansEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - standardJacksonObjectMapperBuilderCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jacksonObjectMapperBuilder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - parameterNamesModule
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jacksonObjectMapper
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jsonComponentModule
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jsonMixinModule
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - hikariPoolDataSourceMetadataProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptorConfigurer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - transactionManager
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jpaVendorAdapter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - entityManagerFactoryBuilder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - entityManagerFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - cachesEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - servletWebChildContextFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - managementServletContext
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthStatusAggregator
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthHttpCodeStatusMapper
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthEndpointGroups
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthContributorRegistry
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthEndpointGroupsBeanPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthEndpointWebMvcHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - healthEndpointWebExtension
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - infoEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - conditionsReportEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - configurationPropertiesReportEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - endpointOperationParameterMapper
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - endpointCachingOperationInvokerAdvisor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mbeanExporter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - objectNamingStrategy
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mbeanServer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jmxAnnotationEndpointDiscoverer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - endpointObjectNameFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jmxMBeanExporter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jmxIncludeExcludePropertyEndpointFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - eagerlyInitializeJmxEndpointExporter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - servletEndpointDiscoverer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webEndpointPathMapper
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - endpointMediaTypes
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webEndpointDiscoverer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - controllerEndpointDiscoverer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - pathMappedEndpoints
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webExposeExcludePropertyEndpointFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - controllerExposeExcludePropertyEndpointFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - environmentEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - diskSpaceHealthIndicator
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - pingHealthContributor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - dbHealthContributor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - logFileWebEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - loggersEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - heapDumpWebEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - dumpEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - micrometerClock
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - meterRegistryPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - propertiesMeterFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - simpleMeterRegistry
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - simpleConfig
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jvmGcMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jvmHeapPressureMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jvmMemoryMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jvmThreadMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - classLoaderMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - logbackMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - metricsEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - uptimeMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - processorMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - fileDescriptorMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - diskSpaceMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - repositoryTagsProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListener
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListenerBeanPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - hikariDataSourceMeterBinder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - dataSourcePoolMetadataMeterBinder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - startupTimeMetrics
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - scheduledBeanLazyInitializationExcludeFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - taskSchedulerBuilder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - stringHttpMessageConverter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mappingJackson2HttpMessageConverter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - messageConverters
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - restTemplateBuilderConfigurer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - restTemplateBuilder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - restTemplateExchangeTagsProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - metricsRestTemplateCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - metricsHttpClientUriTagFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webMvcTagsProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webMvcMetricsFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - metricsHttpServerUriTagFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - metricsWebMvcConfigurer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - tomcatMetricsBinder
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - scheduledTasksEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - dispatcherServletMappingDescriptionProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - servletMappingDescriptionProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - filterMappingDescriptionProvider
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - mappingsEndpoint
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - springApplicationAdminRegistrar
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.aop.config.internalAutoProxyCreator
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - lifecycleProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - persistenceExceptionTranslationPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.ProjectingArgumentResolverRegistrar
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - projectingArgumentResolverBeanPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataWebConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - pageableResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - sortResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataJacksonConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jacksonGeoModule
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - pageableCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - sortCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - jdbcTemplate
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - namedParameterJdbcTemplate
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - dataSourceScriptDatabaseInitializer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - java8TimeDialect
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - thymeleafViewResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - defaultTemplateResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - templateEngine
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionAdvisor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - transactionAttributeSource
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - transactionInterceptor
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionalEventListenerFactory
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - transactionTemplate
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - platformTransactionManagerCustomizers
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - tomcatWebServerFactoryCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - characterEncodingFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - localeCharsetMappingsCustomizer
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - multipartConfigElement
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - multipartResolver
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - servletEndpointRegistrar
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - servletExposeExcludePropertyEndpointFilter
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - webEndpointServletHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - controllerEndpointHandlerMapping
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties
2025-05-13 11:46:23 [main] DEBUG src.WebApplication -  - org.springframework.orm.jpa.SharedEntityManagerCreator#0
2025-05-13 11:46:27 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-13 11:46:27 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-13 11:46:27 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-13 11:46:27 [http-nio-8082-exec-1] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [368] milliseconds.
2025-05-13 11:46:32 [http-nio-8082-exec-4] INFO  src.service.LoggingService - [2025-05-13 11:46:32] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 11:46:32 [http-nio-8082-exec-4] INFO  src.service.LoggingService - [2025-05-13 11:46:32] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 11:46:32 [http-nio-8082-exec-4] INFO  src.service.LoggingService - [2025-05-13 11:46:32] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 11:46:32 [http-nio-8082-exec-4] INFO  src.service.LoggingService - [2025-05-13 11:46:32] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 11:46:32 [http-nio-8082-exec-4] DEBUG src.service.LoggingService - [2025-05-13 11:46:32] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
2025-05-13 12:43:09 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 12:43:09] Type: AUTH, Matricule: 101149, Location: ./documents/destination - Connexion réussie
2025-05-13 12:43:09 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 12:43:09] Type: AUTH, Matricule: 101149, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 12:43:09 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 12:43:09] Type: AUTH, Matricule: 101149, Location: ./documents/destination - SQL results - nom: MANNELLO, prenom: Anthony, brigade: BRIGADE 2
2025-05-13 12:43:09 [http-nio-8082-exec-1] INFO  src.service.LoggingService - [2025-05-13 12:43:09] Type: AUTH, Matricule: 101149, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 12:43:09 [http-nio-8082-exec-1] DEBUG src.service.LoggingService - [2025-05-13 12:43:09] Type: AUTH, Matricule: 101149, Location: ./documents/destination - Récupération du pouvoir: userPm
2025-05-13 12:48:40 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 12:48:40] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 12:48:40 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 12:48:40] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 12:48:40 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 12:48:40] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 12:48:40 [http-nio-8082-exec-5] INFO  src.service.LoggingService - [2025-05-13 12:48:40] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 12:48:40 [http-nio-8082-exec-5] DEBUG src.service.LoggingService - [2025-05-13 12:48:40] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
2025-05-13 13:04:48 [http-nio-8082-exec-4] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8082-exec-4] Exception processing template "cartographie": An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement", this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement", this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:178)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	... 70 common frames omitted
2025-05-13 13:04:48 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] with root cause
org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2025-05-13 13:04:48 [http-nio-8082-exec-4] ERROR o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$StaticView - Cannot render error page for request [/cartographie] and exception [An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2025-05-13 13:04:51 [http-nio-8082-exec-6] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8082-exec-6] Exception processing template "cartographie": An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement", this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement", this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:178)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	... 70 common frames omitted
2025-05-13 13:04:51 [http-nio-8082-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] with root cause
org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2025-05-13 13:04:51 [http-nio-8082-exec-6] ERROR o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$StaticView - Cannot render error page for request [/cartographie] and exception [An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2025-05-13 13:04:52 [http-nio-8082-exec-10] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8082-exec-10] Exception processing template "cartographie": An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement", this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement", this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:178)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	... 70 common frames omitted
2025-05-13 13:04:52 [http-nio-8082-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] with root cause
org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2025-05-13 13:04:52 [http-nio-8082-exec-10] ERROR o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$StaticView - Cannot render error page for request [/cartographie] and exception [An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2025-05-13 13:05:24 [http-nio-8082-exec-2] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8082-exec-2] Exception processing template "cartographie": An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement" this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "
        let map;
        let markers = [];
        let selectedLocation = null;
        
        // Définition des icônes personnalisées pour chaque type de signalement
        const typeIcons = {
            'DÊPOTS': L.icon({
                iconUrl: 'depots.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AFFICHAGES': L.icon({
                iconUrl: 'affichages.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'TAGS': L.icon({
                iconUrl: 'tags.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            }),
            'AUTRES': L.icon({
                iconUrl: 'autres.png',
                iconSize: [32, 32],
                iconAnchor: [16, 32],
                popupAnchor: [0, -32]
            })
        };

        function initMap() {
            map = L.map('map').setView([43.1741, 5.6067], 14); // La Ciotat

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            map.on('click', function(e) {
                selectedLocation = e.latlng;
                if (document.getElementById('signalement-form').style.display === 'block') {
                    placeMarker(selectedLocation);
                }
            });

            chargerSignalements();
        }

        function placeMarker(location) {
            markers.forEach(m => map.removeLayer(m));
            markers = [];
            const selectedType = document.getElementById('type');
            const typeText = selectedType.options[selectedType.selectedIndex].textContent;
            const icon = typeIcons[typeText] || new L.Icon.Default();
            let marker = L.marker([location.lat, location.lng], {icon: icon}).addTo(map);
            markers.push(marker);
        }

        function nouveauSignalement() {
            document.getElementById('signalement-form').style.display = 'block';
        }

        async function chargerSignalements(type = 'tous') {
            // Mapping entre valeurs numériques et libellés
            const typeMapping = {
                '1': 'DÊPOTS',
                '2': 'AFFICHAGES',
                '3': 'TAGS',
                '4': 'AUTRES',
                'DÊPOTS': 'DÊPOTS',
                'AFFICHAGES': 'AFFICHAGES',
                'TAGS': 'TAGS',
                'AUTRES': 'AUTRES'
            };
            try {
                const response = await fetch('/api/signalements');
                const signalements = await response.json();
                let signalementsFiltres = signalements;
                if (type && type !== 'tous') {
                    signalementsFiltres = signalements.filter(s => {
                        // On mappe la valeur du type du signalement (numérique ou texte) vers le libellé
                        const typeSignalement = typeMapping[s.type] || s.type;
                        return typeSignalement === type;
                    });
                }
                afficherSignalements(signalementsFiltres, type);
            } catch (error) {
                console.error('Erreur lors du chargement des signalements:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const jour = String(date.getDate()).padStart(2, '0');
            const mois = String(date.getMonth() + 1).padStart(2, '0');
            const annee = date.getFullYear();
            const heures = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            return `${jour}/${mois}/${annee} - ${heures}:${minutes}`;
        }

        function afficherSignalements(signalements, type = 'tous') {
            const container = document.getElementById('liste-signalements');
            container.innerHTML = '';
            markers.forEach(m => map.removeLayer(m));
            markers = [];

            signalements.forEach(s => {
                const typeSelect = document.getElementById('type');
                const typeOption = Array.from(typeSelect.options).find(option => option.value === s.type);
                const typeLibelle = typeOption ? typeOption.textContent : s.type || 'Type inconnu';

                const div = document.createElement('div');
                div.className = 'signalement-item';
                div.innerHTML = `
                    <strong>${typeLibelle}</strong><br>
                    ${s.adresse}<br>
                    <button onclick="consulterSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-eye"></i> Consulter</button>
                    <button onclick="supprimerSignalement(${s.id})" class="tool-button btn-sm"><i class="fas fa-trash"></i> Supprimer</button>
                `;

                const modalHtml = `
                    <div class="modal fade" id="modalSignalement${s.id}" tabindex="-1" aria-labelledby="modalSignalementLabel${s.id}" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content bg-dark text-white">
                                <div class="modal-header border-bottom border-secondary">
                                    <h5 class="modal-title" id="modalSignalementLabel${s.id}">Détails du Signalement</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="formSignalement${s.id}" onsubmit="event.preventDefault(); sauvegarderModifications(${s.id}); return false;">
                                        <div class="mb-3">
                                            <label class="form-label">Type</label>
                                            <input type="text" class="form-control" value="${typeLibelle}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Description</label>
                                            <textarea class="form-control" id="description${s.id}" name="description${s.id}" rows="3" required>${s.description}</textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Date de création</label>
                                            <input type="text" class="form-control" value="${formatDate(s.dateCreation)}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Utilisateur</label>
                                            <input type="text" class="form-control" value="${s.idUtilisateur}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Brigade</label>
                                            <input type="text" class="form-control" value="${connectedAgentBrigade}" readonly>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Photos existantes</label>
                                            <div id="photos${s.id}" class="photo-gallery">
                                                ${Array.isArray(s.photos) && s.photos.length > 0 ?
                                                    s.photos.map(photo => `<img src="/api/signalements/${s.id}/photos/${photo}" class="photo-thumbnail" loading="lazy" alt="Photo du signalement" this.src); openPhotoModal(this.src)">`).join('\n')
                                                    : '<p class="text-muted">Aucune photo</p>'}
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Ajouter des photos</label>
                                            <input type="file" class="form-control" id="photos" name="files" multiple accept="image/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    " - line 164, col 132)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:178)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	... 70 common frames omitted
2025-05-13 13:05:24 [http-nio-8082-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] with root cause
org.thymeleaf.templateparser.text.TextParseException: (Line = 164, Column = 132) Incomplete structure: "/*">
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer border-top border-secondary">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Fermer" tabindex="0">Fermer</button>
                                    <button type="submit" class="btn btn-primary" form="formSignalement${s.id}" aria-label="Sauvegarder" tabindex="0">Sauvegarder</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                container.appendChild(div);

                // Utiliser le type de signalement pour sélectionner l'icône appropriée
                const icon = typeIcons[typeLibelle] || new L.Icon.Default();
                if (s.latitude && s.longitude) {
                    const marker = L.marker([s.latitude, s.longitude], {
                        title: typeLibelle,
                        icon: icon
                    }).addTo(map)
                    .on('click', function() {
                        consulterSignalement(s.id);
                    });
                    markers.push(marker);
                }
            });
        }

        async function consulterSignalement(id) {
            const modal = new bootstrap.Modal(document.getElementById(`modalSignalement${id}`));
            modal.show();
        }

        async function supprimerSignalement(id) {
            Swal.fire({
                title: 'Travaux en cours',
                text: 'La fonctionnalité de suppression est en cours de développement.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }

        function fermerModal(id) {
            const modalElement = document.getElementById(`modalSignalement${id}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
            }
        }

        async function sauvegarderModifications(id) {
            console.log('sauvegarderModifications appelée pour id:', id);
            try {
                const formData = new FormData();
                formData.append('description', document.getElementById(`description${id}`).value);
                
                const filesInput = document.querySelector(`#modalSignalement${id} input[type=file]`);
                console.log('filesInput.files:', filesInput.files); // Ajout du log ici

                if (filesInput && filesInput.files.length > 0) {
                    for (let i = 0; i < filesInput.files.length; i++) {
                        const file = filesInput.files[i];
                        console.log('Fichier ajouté au FormData:', file); // Ajout du log ici
                        formData.append('files', file);
                    }
                }

                const response = await fetch(`/api/signalements/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    Swal.fire({
                        title: 'Succès',
                        text: 'Modifications enregistrées avec succès',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    fermerModal(id);
                    chargerSignalements();
                } else {
                    throw new Error('Erreur lors de la sauvegarde');
                }
            } catch (error) {
                console.error('Erreur:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur est survenue lors de la sauvegarde',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Correction des boutons de filtre pour appeler chargerSignalements avec le bon type
        function filtrerSignalements(type) {
            chargerSignalements(type);
        }

        function exporterSignalements() {
            window.location.href = '/api/signalements/export';
        }

        function  loadInitialData() {
            // Charger l'imatricul de l'agent connecté
            fetch('/api/user-info')
            .then(response => response.json())
            .then(userInfo => {
                connectedAgentId = userInfo.matricule;
                connectedAgentBrigade = userInfo.brigade;
            })
            .catch(error => console.error('Erreur chargement agents:', error));
        }
        loadInitialData();

        document.getElementById('form-signalement').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!selectedLocation) {
                alert('Veuillez sélectionner un emplacement sur la carte');
                return;
            }

            const formData = new FormData();
            formData.append('type', document.getElementById('type').value);
            formData.append('adresse', document.getElementById('adresse').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('latitude', selectedLocation.lat);
            formData.append('longitude', selectedLocation.lng);
            formData.append('idUtilisateur', connectedAgentId);
            const photosInput = document.getElementById('photos');
            if (photosInput && photosInput.files && photosInput.files.length > 0) {
                for (let photo of photosInput.files) {
                    formData.append('files', photo);
                }
            }

            try {
                const response = await fetch('/api/signalements', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la création du signalement');
                }

                document.getElementById('form-signalement').reset();
                document.getElementById('signalement-form').style.display = 'none';
                selectedLocation = null;
                chargerSignalements();
            } catch (error) {
                console.error('Erreur lors de la création du signalement:', error);
                Swal.fire({
                    title: 'Erreur',
                    text: 'Erreur lors de la création du signalement',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });

        async function chargerTypesSignalement() {
            try {
                const response = await fetch('/api/types-signalement');
                const types = await response.json();
                const selectType = document.getElementById('type');
                types.forEach(type => {
                    const option = document.createElement('option');
                    option.value = type.id;
                    option.textContent = type.libelle;
                    option.title = type.description; // Ajouter l'infobulle avec la description
                    selectType.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur lors du chargement des types de signalement:', error);
            }
        }

        // MODAL PHOTO AGRANDIE
        function openPhotoModal(photoUrl) {
            // Extraire le nom du fichier à partir de l'URL
            const fileName = photoUrl.split('_').pop().split('?')[0];
            
            Swal.fire({
                title: fileName,
                html: `<img src="${photoUrl}" alt="Photo du signalement" style="max-width:90vw; max-height:80vh; border-radius:8px; box-shadow:0 0 20px #000;">`,
                showCloseButton: true,
                showConfirmButton: false,
                background: 'rgba(0,0,0,0.95)',
                width: 850,
                customClass: {
                    popup: 'photo-modal-swal'
                }
            });
        }
        function closePhotoModal(event) {
            const modal = document.getElementById('photoModalCustom');
            if (event && event.target && (event.target === modal || event.target.classList.contains('close'))) {
                modal.style.display = 'none';
                document.getElementById('photoModalImg').src = '';
            }
        }

        window.onload = async function() {
            initMap();
            await chargerTypesSignalement();
        };
    "
	at org.thymeleaf.templateparser.text.TextParser.parseDocument(TextParser.java:209)
	at org.thymeleaf.templateparser.text.TextParser.parse(TextParser.java:100)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parse(AbstractTextTemplateParser.java:169)
	at org.thymeleaf.templateparser.text.AbstractTextTemplateParser.parseString(AbstractTextTemplateParser.java:113)
	at org.thymeleaf.engine.TemplateManager.parseString(TemplateManager.java:452)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inlineSwitchTemplateMode(AbstractStandardInliner.java:153)
	at org.thymeleaf.standard.inline.AbstractStandardInliner.inline(AbstractStandardInliner.java:114)
	at org.thymeleaf.standard.processor.StandardInliningTextProcessor.doProcess(StandardInliningTextProcessor.java:62)
	at org.thymeleaf.processor.text.AbstractTextProcessor.process(AbstractTextProcessor.java:57)
	at org.thymeleaf.util.ProcessorConfigurationUtils$TextProcessorWrapper.process(ProcessorConfigurationUtils.java:749)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:560)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2025-05-13 13:05:24 [http-nio-8082-exec-2] ERROR o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$StaticView - Cannot render error page for request [/cartographie] and exception [An error happened during template parsing (template: "class path resource [templates/cartographie.html]")] as the response has already been committed. As a result, the response may have the wrong status code.
2025-05-13 13:22:54 [main] INFO  src.WebApplication - Starting WebApplication using Java 11.0.26 on POM48 with PID 15616 (C:\StatPm\target\classes started by brigadenautique in C:\StatPm)
2025-05-13 13:22:54 [main] DEBUG src.WebApplication - Running with Spring Boot v2.7.0, Spring v5.3.20
2025-05-13 13:22:54 [main] INFO  src.WebApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 13:22:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-13 13:22:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 12 JPA repository interfaces.
2025-05-13 13:22:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-05-13 13:22:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 13:22:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.63]
2025-05-13 13:22:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 13:22:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1710 ms
2025-05-13 13:22:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-13 13:22:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.9.Final
2025-05-13 13:22:57 [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-13 13:22:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-13 13:22:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-13 13:22:57 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-13 13:22:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-13 13:22:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-13 13:22:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-13 13:22:59 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-05-13 13:22:59 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-13 13:22:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path ''
2025-05-13 13:22:59 [main] INFO  src.WebApplication - Started WebApplication in 5.08 seconds (JVM running for 5.789)
2025-05-13 13:22:59 [main] INFO  src.WebApplication - Application StatPm démarrée avec succès!
2025-05-13 13:22:59 [main] DEBUG src.WebApplication - Beans chargés (400):
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalConfigurationAnnotationProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalAutowiredAnnotationProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalCommonAnnotationProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.context.annotation.internalPersistenceAnnotationProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.context.event.internalEventListenerFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webApplication
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - utils
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - databaseConfig
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - adresseController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - agentController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - brigadeController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - cartographieController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - configController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - consulterStatController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - databaseBackupController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - equipageController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - interventionsController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - loginController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - missionsController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - natinfController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - proceduresController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - redactionController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statInterventionController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statMissionController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statisticsController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - travauxController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - typeSignalementController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - authenticationService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - brigadeService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - LLMService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - loggingService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statInterventionService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statMissionService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - interventionServiceImpl
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - missionServiceImpl
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statisticsServiceImpl
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - connexionSql
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - getDataSource
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.AutoConfigurationPackages
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.domain.EntityScanPackages
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - emBeanDefinitionRegistrarPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jpaMappingContext
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jpaContext
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.util.JpaMetamodelCacheCleanup
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statMissionRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - madRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - signalementRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - statInterventionRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - infractionRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - agentsRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - missionsRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - adressesRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - typeSignalementRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - brigadeRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - interventionsRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - photoRepository
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - propertySourcesPlaceholderConfigurer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - websocketServletWebServerCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - servletWebServerFactoryCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - tomcatServletWebServerFactoryCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinderFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.internalConfigurationPropertiesBinder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.BoundConfigurationProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - server-org.springframework.boot.autoconfigure.web.ServerProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webServerFactoryCustomizerBeanPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - errorPageRegistrarBeanPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - dispatcherServlet
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - dispatcherServletRegistration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - taskExecutorBuilder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - applicationTaskExecutor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - error
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - beanNameViewResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - conventionErrorViewResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.web-org.springframework.boot.autoconfigure.web.WebProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - errorAttributes
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - basicErrorController
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - errorPageCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - preserveErrorControllerTargetClassPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - requestMappingHandlerAdapter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - welcomePageHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - localeResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - themeResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - flashMapManager
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcConversionService
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcValidator
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcContentNegotiationManager
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - requestMappingHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcPatternParser
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcUrlPathHelper
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcPathMatcher
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - viewControllerHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - beanNameHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - routerFunctionMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - resourceHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcResourceUrlProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - defaultServletHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - handlerFunctionAdapter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcUriComponentsContributor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - httpRequestHandlerAdapter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - simpleControllerHandlerAdapter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - handlerExceptionResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcViewResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mvcHandlerMappingIntrospector
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - viewNameTranslator
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - defaultViewResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - viewResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - requestContextFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - formContentFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - applicationAvailability
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - beansEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - standardJacksonObjectMapperBuilderCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jacksonObjectMapperBuilder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - parameterNamesModule
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jacksonObjectMapper
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jsonComponentModule
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jsonMixinModule
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - hikariPoolDataSourceMetadataProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - openEntityManagerInViewInterceptorConfigurer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - transactionManager
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jpaVendorAdapter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - entityManagerFactoryBuilder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - entityManagerFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - cachesEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - servletWebChildContextFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - managementServletContext
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthStatusAggregator
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthHttpCodeStatusMapper
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthEndpointGroups
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthContributorRegistry
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthEndpointGroupsBeanPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthEndpointWebMvcHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - healthEndpointWebExtension
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - infoEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - conditionsReportEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - configurationPropertiesReportEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - endpointOperationParameterMapper
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - endpointCachingOperationInvokerAdvisor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mbeanExporter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - objectNamingStrategy
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mbeanServer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jmxAnnotationEndpointDiscoverer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - endpointObjectNameFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jmxMBeanExporter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jmxIncludeExcludePropertyEndpointFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - eagerlyInitializeJmxEndpointExporter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - servletEndpointDiscoverer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webEndpointPathMapper
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - endpointMediaTypes
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webEndpointDiscoverer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - controllerEndpointDiscoverer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - pathMappedEndpoints
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webExposeExcludePropertyEndpointFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - controllerExposeExcludePropertyEndpointFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - environmentEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - diskSpaceHealthIndicator
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - pingHealthContributor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - dbHealthContributor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - logFileWebEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - loggersEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - heapDumpWebEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - dumpEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - micrometerClock
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - meterRegistryPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - propertiesMeterFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - simpleMeterRegistry
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - simpleConfig
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jvmGcMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jvmHeapPressureMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jvmMemoryMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jvmThreadMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - classLoaderMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - logbackMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - metricsEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - uptimeMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - processorMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - fileDescriptorMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - diskSpaceMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - repositoryTagsProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListener
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - metricsRepositoryMethodInvocationListenerBeanPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - hikariDataSourceMeterBinder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - dataSourcePoolMetadataMeterBinder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - startupTimeMetrics
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - scheduledBeanLazyInitializationExcludeFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - taskSchedulerBuilder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - stringHttpMessageConverter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mappingJackson2HttpMessageConverter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - messageConverters
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - restTemplateBuilderConfigurer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - restTemplateBuilder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - restTemplateExchangeTagsProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - metricsRestTemplateCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - metricsHttpClientUriTagFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webMvcTagsProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webMvcMetricsFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - metricsHttpServerUriTagFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - metricsWebMvcConfigurer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - tomcatMetricsBinder
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - scheduledTasksEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - dispatcherServletMappingDescriptionProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - servletMappingDescriptionProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - filterMappingDescriptionProvider
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - mappingsEndpoint
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - springApplicationAdminRegistrar
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.aop.config.internalAutoProxyCreator
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - lifecycleProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - persistenceExceptionTranslationPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.ProjectingArgumentResolverRegistrar
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - projectingArgumentResolverBeanPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataWebConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - pageableResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - sortResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.data.web.config.SpringDataJacksonConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jacksonGeoModule
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - pageableCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - sortCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - jdbcTemplate
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - namedParameterJdbcTemplate
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - dataSourceScriptDatabaseInitializer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - java8TimeDialect
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - thymeleafViewResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - defaultTemplateResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - templateEngine
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionAdvisor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - transactionAttributeSource
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - transactionInterceptor
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.transaction.config.internalTransactionalEventListenerFactory
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - transactionTemplate
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - platformTransactionManagerCustomizers
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - tomcatWebServerFactoryCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - characterEncodingFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - localeCharsetMappingsCustomizer
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - multipartConfigElement
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - multipartResolver
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - servletEndpointRegistrar
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - servletExposeExcludePropertyEndpointFilter
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - webEndpointServletHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - controllerEndpointHandlerMapping
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties
2025-05-13 13:22:59 [main] DEBUG src.WebApplication -  - org.springframework.orm.jpa.SharedEntityManagerCreator#0
2025-05-13 13:23:04 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-13 13:23:04 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-13 13:23:04 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-13 13:23:04 [http-nio-8082-exec-2] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [289] milliseconds.
2025-05-13 13:26:25 [http-nio-8082-exec-8] INFO  src.service.LoggingService - [2025-05-13 13:26:25] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Connexion réussie
2025-05-13 13:26:25 [http-nio-8082-exec-8] INFO  src.service.LoggingService - [2025-05-13 13:26:25] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Executing SQL query for agent details
2025-05-13 13:26:25 [http-nio-8082-exec-8] INFO  src.service.LoggingService - [2025-05-13 13:26:25] Type: AUTH, Matricule: 56020, Location: ./documents/destination - SQL results - nom: BOUZEBOUDJA, prenom: Mansour, brigade: ENCADREMENT
2025-05-13 13:26:25 [http-nio-8082-exec-8] INFO  src.service.LoggingService - [2025-05-13 13:26:25] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Agent details retrieved successfully
2025-05-13 13:26:25 [http-nio-8082-exec-8] DEBUG src.service.LoggingService - [2025-05-13 13:26:25] Type: AUTH, Matricule: 56020, Location: ./documents/destination - Récupération du pouvoir: admin
